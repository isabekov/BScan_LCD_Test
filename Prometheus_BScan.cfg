#################################################################################
#
# A TCL script for sending an ASCII text via OpenOCD to Prometheus FPGA via JTAG
# and displaying it on a 2x16 LCD connected to FPGA.
# Requires a Prometheus FPGA board configured with "BScan_LCD_Test" VHDL project.
#
# Run OpenOCD with the cable configuration file (FT232H.cfg) and
# this file (Prometheus_BScan.cfg):
# $ openocd -f FT232H.cfg -f Prometheus_BScan.cfg
#
# Connect to OpenOCD in another terminal:
# $ telnet localhost 4444
# Send some text to FPGA in OpenOCD terminal:
# > send_seq "This is OpenOCD talking to FPGA!"
# 54686973206973204f70656e4f43442074616c6b696e6720746f204650474121
# Returned hexademical string represents previous value of SHIFT_REGISTER.
# You can decode it using ASCII table.
#
# VHDL project details:
# Engineer: Altynbek Isabekov
# Create Date:    2022-01-09
# Design Name:    JTAG to 2x16 LCD driver testing circuit (via BSCAN register)
# Module Name:    BScan_LCD_Test - Behavioral
# Project Name:   JTAG to 2x16 LCD driver
# Target Devices: xc3s50a, vq100 package (Prometheus FPGA development board)
# Tool versions:
# Description: The circuit receives 32 ASCII characters from the
#              TDI input of the built-in JTAG Test Access Point interface
#              and displays them on a 2x16 LCD.
#
# Dependencies: LCDDriver4bit.vhdl by A. Greensted (modified)
#################################################################################

# Test Access Port: Spartan3A XC3S50A FPGA
jtag newtap spartan3a tap -irlen 6 -expected-id 0x02210093

# USER1 instruction is defined in file xc3s50a.bsd
set BSCAN_USER1 0x02

# Our shift register is of length 8 x [number of characters] = 256 bits
set N_Chars 32
set USER1_REG_LEN [expr 8*$N_Chars]

proc send_seq {txt} {
   global N_Chars BSCAN_USER1 USER1_REG_LEN
   set txtlen [string length $txt]
   if {$txtlen > $N_Chars} {
       # Subset only first N_Chars of letters, ignore rest of the text
       set txt [string range $txt 0 [expr $N_Chars - 1]]
   } elseif {$txtlen < $N_Chars} {
       # Append white spaces to the text if it is shorter than N_Chars letters
       # to complement to a total length of N_Chars
       for { set x 0 } { $x < [expr $N_Chars - $txtlen] } { set x [expr $x + 1]} {
           set txt "${txt} "
       }
   }
   puts "\nOpenOCD to FPGA communication via JTAG:\nText is trimmed to 32 characters:\n"\"$txt\"

   # Convert string variable "txt" to its hexadecimal representation
   set res "0x"
   for { set x 0 } { $x < $N_Chars } { set x [expr $x + 1]} {
           append res [format "%x" [scan [string index $txt $x]  "%c"]]
   }
   # Send instruction over TDI
   irscan spartan3a.tap $BSCAN_USER1
   # Send bitstream "$res" to data register
   drscan spartan3a.tap $USER1_REG_LEN $res
}
